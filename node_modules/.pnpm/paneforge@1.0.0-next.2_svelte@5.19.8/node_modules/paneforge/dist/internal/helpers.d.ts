import type { Direction, DragState, PaneConstraints, PaneData, ResizeEvent } from "./types.js";
export declare function noop(): void;
export declare function updateResizeHandleAriaValues({ groupId, layout, paneDataArray, }: {
    groupId: string;
    layout: number[];
    paneDataArray: PaneData[];
}): () => void;
export declare function getResizeHandleElementsForGroup(groupId: string): HTMLElement[];
export declare function getResizeHandleElementIndex(groupId: string, id: string): number | null;
export declare function getPivotIndices(groupId: string, dragHandleId: string): [indexBefore: number, indexAfter: number];
export declare function paneDataHelper(paneDataArray: PaneData[], paneData: PaneData, layout: number[]): {
    paneSize: number;
    pivotIndices: number[];
    collapsedSize?: number | undefined;
    collapsible?: boolean | undefined;
    defaultSize?: number | undefined;
    maxSize?: number | undefined;
    minSize?: number | undefined;
};
export declare function findPaneDataIndex(paneDataArray: readonly PaneData[], paneData: PaneData): number;
export declare function callPaneCallbacks(paneArray: PaneData[], layout: number[], paneIdToLastNotifiedSizeMap: Record<string, number>): void;
export declare function getUnsafeDefaultLayout({ paneDataArray }: {
    paneDataArray: PaneData[];
}): number[];
export declare function validatePaneGroupLayout({ layout: prevLayout, paneConstraints, }: {
    layout: number[];
    paneConstraints: PaneConstraints[];
}): number[];
export declare function getPaneGroupElement(id: string): HTMLElement | null;
export declare function getResizeHandleElement(id: string): HTMLElement | null;
export declare function getDragOffsetPercentage(e: ResizeEvent, dragHandleId: string, dir: Direction, initialDragState: DragState): number;
export declare function getDeltaPercentage(e: ResizeEvent, dragHandleId: string, dir: Direction, initialDragState: DragState | null, keyboardResizeBy: number | null): number;
export declare function getResizeEventCursorPosition(dir: Direction, e: ResizeEvent): number;
export declare function getResizeHandlePaneIds(groupId: string, handleId: string, panesArray: PaneData[]): [idBefore: string | null, idAfter: string | null];
